webpackJsonp([24,201],{

/***/ 673:
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
	    'basic-controlled': __webpack_require__(1724),
	    'basic': __webpack_require__(1725),
	    'draggable': __webpack_require__(1726),
	    'dynamic': __webpack_require__(1727),
	    'search': __webpack_require__(1728),
	}

/***/ },

/***/ 1724:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _style2 = __webpack_require__(211);

	var _tree = __webpack_require__(210);

	var _tree2 = _interopRequireDefault(_tree);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(2);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = {
	  "content": {
	    "zh-CN": [["p", "受控操作示例"]],
	    "en-US": [["p", "basic controlled example"]]
	  },
	  "meta": {
	    "order": 1,
	    "title": {
	      "zh-CN": "受控操作示例",
	      "en-US": "basic controlled example"
	    },
	    "filename": "components/tree/demo/basic-controlled.md",
	    "id": "components-tree-demo-basic-controlled"
	  },
	  "toc": ["ul", ["li", ["a", {
	    "href": "#zh-CN"
	  }, "zh-CN"]], ["li", ["a", {
	    "href": "#en-US"
	  }, "en-US"]]],
	  "highlightedCode": ["pre", {
	    "lang": "jsx",
	    "highlighted": "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Tree <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'antd'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> TreeNode <span class=\"token operator\" >=</span> Tree<span class=\"token punctuation\" >.</span>TreeNode<span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> x <span class=\"token operator\" >=</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> y <span class=\"token operator\" >=</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> z <span class=\"token operator\" >=</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> gData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> generateData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>_level<span class=\"token punctuation\" >,</span> _preKey<span class=\"token punctuation\" >,</span> _tns<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> preKey <span class=\"token operator\" >=</span> _preKey <span class=\"token operator\" >||</span> <span class=\"token string\" >'0'</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >const</span> tns <span class=\"token operator\" >=</span> _tns <span class=\"token operator\" >||</span> gData<span class=\"token punctuation\" >;</span>\n\n  <span class=\"token keyword\" >const</span> children <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >for</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >let</span> i <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span> i <span class=\"token operator\" >&lt;</span> x<span class=\"token punctuation\" >;</span> i<span class=\"token operator\" >++</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> key <span class=\"token operator\" >=</span> <span class=\"token template-string\" ><span class=\"token string\" >`</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>preKey<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >-</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>i<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span><span class=\"token punctuation\" >;</span>\n    tns<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> title<span class=\"token punctuation\" >:</span> key<span class=\"token punctuation\" >,</span> key <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>i <span class=\"token operator\" >&lt;</span> y<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      children<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>_level <span class=\"token operator\" >&lt;</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> tns<span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >const</span> level <span class=\"token operator\" >=</span> _level <span class=\"token operator\" >-</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n  children<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    tns<span class=\"token punctuation\" >[</span>index<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token function\" >generateData</span><span class=\"token punctuation\" >(</span>level<span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >,</span> tns<span class=\"token punctuation\" >[</span>index<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n<span class=\"token function\" >generateData</span><span class=\"token punctuation\" >(</span>z<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> Demo <span class=\"token operator\" >=</span> React<span class=\"token punctuation\" >.</span><span class=\"token function\" >createClass</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n      expandedKeys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token string\" >'0-0-0'</span><span class=\"token punctuation\" >,</span> <span class=\"token string\" >'0-0-1'</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n      autoExpandParent<span class=\"token punctuation\" >:</span> <span class=\"token boolean\" >true</span><span class=\"token punctuation\" >,</span>\n      checkedKeys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token string\" >'0-0-0'</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n      selectedKeys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onExpand</span><span class=\"token punctuation\" >(</span>expandedKeys<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'onExpand'</span><span class=\"token punctuation\" >,</span> arguments<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// if not set autoExpandParent to false, if children expanded, parent can not collapse.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// or, you can remove all expanded children keys.</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      expandedKeys<span class=\"token punctuation\" >,</span>\n      autoExpandParent<span class=\"token punctuation\" >:</span> <span class=\"token boolean\" >false</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onCheck</span><span class=\"token punctuation\" >(</span>checkedKeys<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      checkedKeys<span class=\"token punctuation\" >,</span>\n      selectedKeys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token string\" >'0-3'</span><span class=\"token punctuation\" >,</span> <span class=\"token string\" >'0-4'</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onSelect</span><span class=\"token punctuation\" >(</span>selectedKeys<span class=\"token punctuation\" >,</span> info<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'onSelect'</span><span class=\"token punctuation\" >,</span> info<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> selectedKeys <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> loop <span class=\"token operator\" >=</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span><span class=\"token function\" >map</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >disableCheckbox</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key <span class=\"token operator\" >===</span> <span class=\"token string\" >'0-0-0'</span><span class=\"token punctuation\" >}</span></span><span class=\"token punctuation\" >></span></span>\n            <span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n      <span class=\"token keyword\" >return</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Tree</span>\n        <span class=\"token attr-name\" >checkable</span>\n        <span class=\"token attr-name\" >onExpand</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onExpand<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >expandedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>expandedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >autoExpandParent</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>autoExpandParent<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >onCheck</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onCheck<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >checkedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>checkedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >onSelect</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onSelect<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >selectedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>selectedKeys<span class=\"token punctuation\" >}</span></span>\n      <span class=\"token punctuation\" >></span></span>\n        <span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>gData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>Tree</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\nReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Demo</span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >,</span> mountNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>"
	  }],
	  "preview": function jsonmlReactLoader() {
	    var TreeNode = _tree2.default.TreeNode;var x = 3;var y = 2;var z = 1;var gData = [];var generateData = function generateData(_level, _preKey, _tns) {
	      var preKey = _preKey || '0';var tns = _tns || gData;var children = [];for (var i = 0; i < x; i++) {
	        var key = preKey + '-' + i;tns.push({ title: key, key: key });if (i < y) {
	          children.push(key);
	        }
	      }if (_level < 0) {
	        return tns;
	      }var level = _level - 1;children.forEach(function (key, index) {
	        tns[index].children = [];return generateData(level, key, tns[index].children);
	      });
	    };generateData(z);var Demo = _react2.default.createClass({
	      displayName: 'Demo',
	      getInitialState: function getInitialState() {
	        return { expandedKeys: ['0-0-0', '0-0-1'], autoExpandParent: true, checkedKeys: ['0-0-0'], selectedKeys: [] };
	      },
	      onExpand: function onExpand(expandedKeys) {
	        console.log('onExpand', arguments); // if not set autoExpandParent to false, if children expanded, parent can not collapse.
	        // or, you can remove all expanded children keys.
	        this.setState({ expandedKeys: expandedKeys, autoExpandParent: false });
	      },
	      onCheck: function onCheck(checkedKeys) {
	        this.setState({ checkedKeys: checkedKeys, selectedKeys: ['0-3', '0-4'] });
	      },
	      onSelect: function onSelect(selectedKeys, info) {
	        console.log('onSelect', info);this.setState({ selectedKeys: selectedKeys });
	      },
	      render: function render() {
	        var loop = function loop(data) {
	          return data.map(function (item) {
	            if (item.children) {
	              return _react2.default.createElement(
	                TreeNode,
	                { key: item.key, title: item.key, disableCheckbox: item.key === '0-0-0' },
	                loop(item.children)
	              );
	            }return _react2.default.createElement(TreeNode, { key: item.key, title: item.key });
	          });
	        };return _react2.default.createElement(
	          _tree2.default,
	          { checkable: true, onExpand: this.onExpand, expandedKeys: this.state.expandedKeys, autoExpandParent: this.state.autoExpandParent, onCheck: this.onCheck, checkedKeys: this.state.checkedKeys, onSelect: this.onSelect, selectedKeys: this.state.selectedKeys },
	          loop(gData)
	        );
	      }
	    });return _react2.default.createElement(Demo, null);
	  }
	};

/***/ },

/***/ 1725:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _style2 = __webpack_require__(211);

	var _tree = __webpack_require__(210);

	var _tree2 = _interopRequireDefault(_tree);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(2);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = {
	  "content": {
	    "zh-CN": [["p", "最简单的用法，展示可勾选，可选中，禁用，默认展开等功能。"]],
	    "en-US": [["p", "The most basic usage, tell you how to use checkable, selectable, disabled, defaultExpandKeys, and etc."]]
	  },
	  "meta": {
	    "order": 0,
	    "title": {
	      "zh-CN": "基本",
	      "en-US": "basic"
	    },
	    "filename": "components/tree/demo/basic.md",
	    "id": "components-tree-demo-basic"
	  },
	  "toc": ["ul", ["li", ["a", {
	    "href": "#zh-CN"
	  }, "zh-CN"]], ["li", ["a", {
	    "href": "#en-US"
	  }, "en-US"]]],
	  "highlightedCode": ["pre", {
	    "lang": "jsx",
	    "highlighted": "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Tree <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'antd'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> TreeNode <span class=\"token operator\" >=</span> Tree<span class=\"token punctuation\" >.</span>TreeNode<span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> Demo <span class=\"token operator\" >=</span> React<span class=\"token punctuation\" >.</span><span class=\"token function\" >createClass</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getDefaultProps</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n      keys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token string\" >'0-0-0'</span><span class=\"token punctuation\" >,</span> <span class=\"token string\" >'0-0-1'</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> keys <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>keys<span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n      defaultExpandedKeys<span class=\"token punctuation\" >:</span> keys<span class=\"token punctuation\" >,</span>\n      defaultSelectedKeys<span class=\"token punctuation\" >:</span> keys<span class=\"token punctuation\" >,</span>\n      defaultCheckedKeys<span class=\"token punctuation\" >:</span> keys<span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onSelect</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'selected'</span><span class=\"token punctuation\" >,</span> info<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onCheck</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'onCheck'</span><span class=\"token punctuation\" >,</span> info<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Tree</span> <span class=\"token attr-name\" >className</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>myCls<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >showLine</span> <span class=\"token attr-name\" >checkable</span>\n        <span class=\"token attr-name\" >defaultExpandedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>defaultExpandedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >defaultSelectedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>defaultSelectedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >defaultCheckedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>defaultCheckedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >onSelect</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onSelect<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >onCheck</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onCheck<span class=\"token punctuation\" >}</span></span>\n      <span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>parent</span> <span class=\"token attr-name\" >1\"</span> <span class=\"token attr-name\" >key</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>0-0<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>parent</span> <span class=\"token attr-name\" >1-0\"</span> <span class=\"token attr-name\" >key</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>0-0-0<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >disabled</span><span class=\"token punctuation\" >></span></span>\n            <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>leaf<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >key</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>0-0-0-0<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >disableCheckbox</span> <span class=\"token punctuation\" >/></span></span>\n            <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>leaf<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >key</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>0-0-0-1<span class=\"token punctuation\" >\"</span></span> <span class=\"token punctuation\" >/></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>parent</span> <span class=\"token attr-name\" >1-1\"</span> <span class=\"token attr-name\" >key</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>0-0-1<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\n            <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token operator\" >&lt;</span>span style<span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >{</span> color<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'#08c'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >}</span></span><span class=\"token punctuation\" >></span></span>sss<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >}</span> key<span class=\"token operator\" >=</span><span class=\"token string\" >\"0-0-1-0\"</span> <span class=\"token operator\" >/</span><span class=\"token operator\" >></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>Tree</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\nReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Demo</span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >,</span> mountNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>"
	  }],
	  "preview": function jsonmlReactLoader() {
	    var TreeNode = _tree2.default.TreeNode;var Demo = _react2.default.createClass({
	      displayName: 'Demo',
	      getDefaultProps: function getDefaultProps() {
	        return { keys: ['0-0-0', '0-0-1'] };
	      },
	      getInitialState: function getInitialState() {
	        var keys = this.props.keys;return { defaultExpandedKeys: keys, defaultSelectedKeys: keys, defaultCheckedKeys: keys };
	      },
	      onSelect: function onSelect(info) {
	        console.log('selected', info);
	      },
	      onCheck: function onCheck(info) {
	        console.log('onCheck', info);
	      },
	      render: function render() {
	        return _react2.default.createElement(
	          _tree2.default,
	          { className: 'myCls', showLine: true, checkable: true, defaultExpandedKeys: this.state.defaultExpandedKeys, defaultSelectedKeys: this.state.defaultSelectedKeys, defaultCheckedKeys: this.state.defaultCheckedKeys, onSelect: this.onSelect, onCheck: this.onCheck },
	          _react2.default.createElement(
	            TreeNode,
	            { title: 'parent 1', key: '0-0' },
	            _react2.default.createElement(
	              TreeNode,
	              { title: 'parent 1-0', key: '0-0-0', disabled: true },
	              _react2.default.createElement(TreeNode, { title: 'leaf', key: '0-0-0-0', disableCheckbox: true }),
	              _react2.default.createElement(TreeNode, { title: 'leaf', key: '0-0-0-1' })
	            ),
	            _react2.default.createElement(
	              TreeNode,
	              { title: 'parent 1-1', key: '0-0-1' },
	              _react2.default.createElement(TreeNode, { title: _react2.default.createElement(
	                  'span',
	                  { style: { color: '#08c' } },
	                  'sss'
	                ), key: '0-0-1-0' })
	            )
	          )
	        );
	      }
	    });return _react2.default.createElement(Demo, null);
	  }
	};

/***/ },

/***/ 1726:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _toConsumableArray2 = __webpack_require__(77);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _style2 = __webpack_require__(211);

	var _tree = __webpack_require__(210);

	var _tree2 = _interopRequireDefault(_tree);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(2);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = {
	  "content": {
	    "zh-CN": [["p", "将节点拖拽到其他节点内部或前后。"]],
	    "en-US": [["p", "Drag treeNode to insert after the other treeNode or insert into the other parent TreeNode."]]
	  },
	  "meta": {
	    "order": 2,
	    "title": {
	      "zh-CN": "拖动示例",
	      "en-US": "draggable"
	    },
	    "filename": "components/tree/demo/draggable.md",
	    "id": "components-tree-demo-draggable"
	  },
	  "toc": ["ul", ["li", ["a", {
	    "href": "#zh-CN"
	  }, "zh-CN"]], ["li", ["a", {
	    "href": "#en-US"
	  }, "en-US"]]],
	  "highlightedCode": ["pre", {
	    "lang": "jsx",
	    "highlighted": "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Tree <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'antd'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> TreeNode <span class=\"token operator\" >=</span> Tree<span class=\"token punctuation\" >.</span>TreeNode<span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> x <span class=\"token operator\" >=</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> y <span class=\"token operator\" >=</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> z <span class=\"token operator\" >=</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> gData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> generateData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>_level<span class=\"token punctuation\" >,</span> _preKey<span class=\"token punctuation\" >,</span> _tns<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> preKey <span class=\"token operator\" >=</span> _preKey <span class=\"token operator\" >||</span> <span class=\"token string\" >'0'</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >const</span> tns <span class=\"token operator\" >=</span> _tns <span class=\"token operator\" >||</span> gData<span class=\"token punctuation\" >;</span>\n\n  <span class=\"token keyword\" >const</span> children <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >for</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >let</span> i <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span> i <span class=\"token operator\" >&lt;</span> x<span class=\"token punctuation\" >;</span> i<span class=\"token operator\" >++</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> key <span class=\"token operator\" >=</span> <span class=\"token template-string\" ><span class=\"token string\" >`</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>preKey<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >-</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>i<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span><span class=\"token punctuation\" >;</span>\n    tns<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> title<span class=\"token punctuation\" >:</span> key<span class=\"token punctuation\" >,</span> key <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>i <span class=\"token operator\" >&lt;</span> y<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      children<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>_level <span class=\"token operator\" >&lt;</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> tns<span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >const</span> level <span class=\"token operator\" >=</span> _level <span class=\"token operator\" >-</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n  children<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    tns<span class=\"token punctuation\" >[</span>index<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token function\" >generateData</span><span class=\"token punctuation\" >(</span>level<span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >,</span> tns<span class=\"token punctuation\" >[</span>index<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n<span class=\"token function\" >generateData</span><span class=\"token punctuation\" >(</span>z<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> Demo <span class=\"token operator\" >=</span> React<span class=\"token punctuation\" >.</span><span class=\"token function\" >createClass</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n      gData<span class=\"token punctuation\" >,</span>\n      expandedKeys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token string\" >'0-0'</span><span class=\"token punctuation\" >,</span> <span class=\"token string\" >'0-0-0'</span><span class=\"token punctuation\" >,</span> <span class=\"token string\" >'0-0-0-0'</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onDragEnter</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// expandedKeys 需要受控时设置</span>\n    <span class=\"token comment\" spellcheck=\"true\">// this.setState({</span>\n    <span class=\"token comment\" spellcheck=\"true\">//   expandedKeys: info.expandedKeys,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// });</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onDrop</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> dropKey <span class=\"token operator\" >=</span> info<span class=\"token punctuation\" >.</span>node<span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>eventKey<span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> dragKey <span class=\"token operator\" >=</span> info<span class=\"token punctuation\" >.</span>dragNode<span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>eventKey<span class=\"token punctuation\" >;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// const dragNodesKeys = info.dragNodesKeys;</span>\n    <span class=\"token keyword\" >const</span> loop <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >,</span> callback<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      data<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >,</span> arr<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>key <span class=\"token operator\" >===</span> key<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n          <span class=\"token keyword\" >return</span> <span class=\"token function\" >callback</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >,</span> arr<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token punctuation\" >}</span>\n        <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n          <span class=\"token keyword\" >return</span> <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >,</span> callback<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token punctuation\" >}</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> data <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>gData<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >let</span> dragObj<span class=\"token punctuation\" >;</span>\n    <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >,</span> dragKey<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >,</span> arr<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      arr<span class=\"token punctuation\" >.</span><span class=\"token function\" >splice</span><span class=\"token punctuation\" >(</span>index<span class=\"token punctuation\" >,</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      dragObj <span class=\"token operator\" >=</span> item<span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >.</span>dropToGap<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >let</span> ar<span class=\"token punctuation\" >;</span>\n      <span class=\"token keyword\" >let</span> i<span class=\"token punctuation\" >;</span>\n      <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >,</span> dropKey<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >,</span> arr<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n        ar <span class=\"token operator\" >=</span> arr<span class=\"token punctuation\" >;</span>\n        i <span class=\"token operator\" >=</span> index<span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      ar<span class=\"token punctuation\" >.</span><span class=\"token function\" >splice</span><span class=\"token punctuation\" >(</span>i<span class=\"token punctuation\" >,</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >,</span> dragObj<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >else</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >,</span> dropKey<span class=\"token punctuation\" >,</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n        item<span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >=</span> item<span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >||</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// where to insert 示例添加到尾部，可以是随意位置</span>\n        item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span>dragObj<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      gData<span class=\"token punctuation\" >:</span> data<span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> loop <span class=\"token operator\" >=</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span><span class=\"token function\" >map</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >&amp;&amp;</span> item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >.</span>length<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >return</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n      <span class=\"token keyword\" >return</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Tree</span>\n        <span class=\"token attr-name\" >defaultExpandedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>expandedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >draggable</span>\n        <span class=\"token attr-name\" >onDragEnter</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onDragEnter<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token attr-name\" >onDrop</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onDrop<span class=\"token punctuation\" >}</span></span>\n      <span class=\"token punctuation\" >></span></span>\n        <span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>gData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>Tree</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\nReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Demo</span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >,</span> mountNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>"
	  }],
	  "preview": function jsonmlReactLoader() {
	    var TreeNode = _tree2.default.TreeNode;var x = 3;var y = 2;var z = 1;var gData = [];var generateData = function generateData(_level, _preKey, _tns) {
	      var preKey = _preKey || '0';var tns = _tns || gData;var children = [];for (var i = 0; i < x; i++) {
	        var key = preKey + '-' + i;tns.push({ title: key, key: key });if (i < y) {
	          children.push(key);
	        }
	      }if (_level < 0) {
	        return tns;
	      }var level = _level - 1;children.forEach(function (key, index) {
	        tns[index].children = [];return generateData(level, key, tns[index].children);
	      });
	    };
	    generateData(z);var Demo = _react2.default.createClass({
	      displayName: 'Demo',
	      getInitialState: function getInitialState() {
	        return { gData: gData,
	          expandedKeys: ['0-0', '0-0-0', '0-0-0-0'] };
	      },
	      onDragEnter: function onDragEnter(info) {
	        console.log(info); // expandedKeys 需要受控时设置
	        // this.setState({
	        //   expandedKeys: info.expandedKeys,
	        // });
	      },
	      onDrop: function onDrop(info) {
	        console.log(info);var dropKey = info.node.props.eventKey;var dragKey = info.dragNode.props.eventKey; // const dragNodesKeys = info.dragNodesKeys;
	        var loop = function loop(data, key, callback) {
	          data.forEach(function (item, index, arr) {
	            if (item.key === key) {
	              return callback(item, index, arr);
	            }if (item.children) {
	              return loop(item.children, key, callback);
	            }
	          });
	        };var data = [].concat((0, _toConsumableArray3.default)(this.state.gData));var dragObj = void 0;loop(data, dragKey, function (item, index, arr) {
	          arr.splice(index, 1);dragObj = item;
	        });if (info.dropToGap) {
	          var ar = void 0;var i = void 0;loop(data, dropKey, function (item, index, arr) {
	            ar = arr;i = index;
	          });ar.splice(i, 0, dragObj);
	        } else {
	          loop(data, dropKey, function (item) {
	            item.children = item.children || []; // where to insert 示例添加到尾部，可以是随意位置
	            item.children.push(dragObj);
	          });
	        }this.setState({ gData: data });
	      },
	      render: function render() {
	        var loop = function loop(data) {
	          return data.map(function (item) {
	            if (item.children && item.children.length) {
	              return _react2.default.createElement(
	                TreeNode,
	                { key: item.key, title: item.key },
	                loop(item.children)
	              );
	            }return _react2.default.createElement(TreeNode, { key: item.key, title: item.key });
	          });
	        };return _react2.default.createElement(
	          _tree2.default,
	          { defaultExpandedKeys: this.state.expandedKeys, draggable: true, onDragEnter: this.onDragEnter, onDrop: this.onDrop },
	          loop(this.state.gData)
	        );
	      }
	    });return _react2.default.createElement(Demo, null);
	  }
	};

/***/ },

/***/ 1727:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _toConsumableArray2 = __webpack_require__(77);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _style2 = __webpack_require__(211);

	var _tree = __webpack_require__(210);

	var _tree2 = _interopRequireDefault(_tree);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(2);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = {
	  "content": {
	    "zh-CN": [["p", "点击展开节点，动态加载数据。"]],
	    "en-US": [["p", "To load data asynchronously when click to expand a treeNode."]]
	  },
	  "meta": {
	    "order": 3,
	    "title": {
	      "zh-CN": "异步数据加载",
	      "en-US": "load data asynchronously"
	    },
	    "filename": "components/tree/demo/dynamic.md",
	    "id": "components-tree-demo-dynamic"
	  },
	  "toc": ["ul", ["li", ["a", {
	    "href": "#zh-CN"
	  }, "zh-CN"]], ["li", ["a", {
	    "href": "#en-US"
	  }, "en-US"]]],
	  "highlightedCode": ["pre", {
	    "lang": "jsx",
	    "highlighted": "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Tree <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'antd'</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> TreeNode <span class=\"token operator\" >=</span> Tree<span class=\"token punctuation\" >.</span>TreeNode<span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >function</span> <span class=\"token function\" >generateTreeNodes</span><span class=\"token punctuation\" >(</span>treeNode<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> arr <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >const</span> key <span class=\"token operator\" >=</span> treeNode<span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>eventKey<span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >for</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >let</span> i <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span> i <span class=\"token operator\" >&lt;</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >;</span> i<span class=\"token operator\" >++</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    arr<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token template-string\" ><span class=\"token string\" >`leaf </span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>key<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >-</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>i<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span><span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >:</span> <span class=\"token template-string\" ><span class=\"token string\" >`</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>key<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >-</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>i<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >return</span> arr<span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span>\n\n<span class=\"token keyword\" >function</span> <span class=\"token function\" >setLeaf</span><span class=\"token punctuation\" >(</span>treeData<span class=\"token punctuation\" >,</span> curKey<span class=\"token punctuation\" >,</span> level<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> loopLeaf <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >,</span> lev<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> l <span class=\"token operator\" >=</span> lev <span class=\"token operator\" >-</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n    data<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >.</span>length <span class=\"token operator\" >></span> curKey<span class=\"token punctuation\" >.</span>length<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >?</span> item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >.</span><span class=\"token function\" >indexOf</span><span class=\"token punctuation\" >(</span>curKey<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >!==</span> <span class=\"token number\" >0</span> <span class=\"token punctuation\" >:</span>\n        curKey<span class=\"token punctuation\" >.</span><span class=\"token function\" >indexOf</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >!==</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >return</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token function\" >loopLeaf</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >,</span> l<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >else</span> <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>l <span class=\"token operator\" >&lt;</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        item<span class=\"token punctuation\" >.</span>isLeaf <span class=\"token operator\" >=</span> <span class=\"token boolean\" >true</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token function\" >loopLeaf</span><span class=\"token punctuation\" >(</span>treeData<span class=\"token punctuation\" >,</span> level <span class=\"token operator\" >+</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span>\n\n<span class=\"token keyword\" >function</span> <span class=\"token function\" >getNewTreeData</span><span class=\"token punctuation\" >(</span>treeData<span class=\"token punctuation\" >,</span> curKey<span class=\"token punctuation\" >,</span> child<span class=\"token punctuation\" >,</span> level<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> loop <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>level <span class=\"token operator\" >&lt;</span> <span class=\"token number\" >1</span> <span class=\"token operator\" >||</span> curKey<span class=\"token punctuation\" >.</span>length <span class=\"token operator\" >-</span> <span class=\"token number\" >3</span> <span class=\"token operator\" >></span> level <span class=\"token operator\" >*</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >)</span> <span class=\"token keyword\" >return</span><span class=\"token punctuation\" >;</span>\n    data<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>curKey<span class=\"token punctuation\" >.</span><span class=\"token function\" >indexOf</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >===</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n          <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >else</span> <span class=\"token punctuation\" >{</span>\n          item<span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >=</span> child<span class=\"token punctuation\" >;</span>\n        <span class=\"token punctuation\" >}</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>treeData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token function\" >setLeaf</span><span class=\"token punctuation\" >(</span>treeData<span class=\"token punctuation\" >,</span> curKey<span class=\"token punctuation\" >,</span> level<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span>\n\n<span class=\"token keyword\" >const</span> Demo <span class=\"token operator\" >=</span> React<span class=\"token punctuation\" >.</span><span class=\"token function\" >createClass</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >getInitialState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >{</span>\n      treeData<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >componentDidMount</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token function\" >setTimeout</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n        treeData<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span>\n          <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'pNode 01'</span><span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'0-0'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n          <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'pNode 02'</span><span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'0-1'</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n          <span class=\"token punctuation\" >{</span> name<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'pNode 03'</span><span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >:</span> <span class=\"token string\" >'0-2'</span><span class=\"token punctuation\" >,</span> isLeaf<span class=\"token punctuation\" >:</span> <span class=\"token boolean\" >true</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n        <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >100</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onSelect</span><span class=\"token punctuation\" >(</span>info<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    console<span class=\"token punctuation\" >.</span><span class=\"token function\" >log</span><span class=\"token punctuation\" >(</span><span class=\"token string\" >'selected'</span><span class=\"token punctuation\" >,</span> info<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >onLoadData</span><span class=\"token punctuation\" >(</span>treeNode<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token keyword\" >new</span> <span class=\"token class-name\" >Promise</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>resolve<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token function\" >setTimeout</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >const</span> treeData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token punctuation\" >.</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>treeData<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token function\" >getNewTreeData</span><span class=\"token punctuation\" >(</span>treeData<span class=\"token punctuation\" >,</span> treeNode<span class=\"token punctuation\" >.</span>props<span class=\"token punctuation\" >.</span>eventKey<span class=\"token punctuation\" >,</span> <span class=\"token function\" >generateTreeNodes</span><span class=\"token punctuation\" >(</span>treeNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> treeData <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n        <span class=\"token function\" >resolve</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >1000</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> loop <span class=\"token operator\" >=</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span><span class=\"token function\" >map</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >return</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>name<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n      <span class=\"token keyword\" >return</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>name<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >isLeaf</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>isLeaf<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >disabled</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key <span class=\"token operator\" >===</span> <span class=\"token string\" >'0-0-0'</span><span class=\"token punctuation\" >}</span></span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> treeNodes <span class=\"token operator\" >=</span> <span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >.</span>treeData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Tree</span> <span class=\"token attr-name\" >onSelect</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onSelect<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >loadData</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onLoadData<span class=\"token punctuation\" >}</span></span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token punctuation\" >{</span>treeNodes<span class=\"token punctuation\" >}</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>Tree</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >,</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\nReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Demo</span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >,</span> mountNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>"
	  }],
	  "preview": function jsonmlReactLoader() {
	    var TreeNode = _tree2.default.TreeNode;function generateTreeNodes(treeNode) {
	      var arr = [];var key = treeNode.props.eventKey;for (var i = 0; i < 3; i++) {
	        arr.push({ name: 'leaf ' + key + '-' + i, key: key + '-' + i });
	      }return arr;
	    }function setLeaf(treeData, curKey, level) {
	      var loopLeaf = function loopLeaf(data, lev) {
	        var l = lev - 1;data.forEach(function (item) {
	          if (item.key.length > curKey.length ? item.key.indexOf(curKey) !== 0 : curKey.indexOf(item.key) !== 0) {
	            return;
	          }if (item.children) {
	            loopLeaf(item.children, l);
	          } else if (l < 1) {
	            item.isLeaf = true;
	          }
	        });
	      };loopLeaf(treeData, level + 1);
	    }function getNewTreeData(treeData, curKey, child, level) {
	      var loop = function loop(data) {
	        if (level < 1 || curKey.length - 3 > level * 2) return;data.forEach(function (item) {
	          if (curKey.indexOf(item.key) === 0) {
	            if (item.children) {
	              loop(item.children);
	            } else {
	              item.children = child;
	            }
	          }
	        });
	      };loop(treeData);setLeaf(treeData, curKey, level);
	    }var Demo = _react2.default.createClass({
	      displayName: 'Demo',
	      getInitialState: function getInitialState() {
	        return { treeData: [] };
	      },
	      componentDidMount: function componentDidMount() {
	        var _this = this;

	        setTimeout(function () {
	          _this.setState({ treeData: [{ name: 'pNode 01', key: '0-0' }, { name: 'pNode 02', key: '0-1' }, { name: 'pNode 03', key: '0-2', isLeaf: true }] });
	        }, 100);
	      },
	      onSelect: function onSelect(info) {
	        console.log('selected', info);
	      },
	      onLoadData: function onLoadData(treeNode) {
	        var _this2 = this;

	        return new Promise(function (resolve) {
	          setTimeout(function () {
	            var treeData = [].concat((0, _toConsumableArray3.default)(_this2.state.treeData));getNewTreeData(treeData, treeNode.props.eventKey, generateTreeNodes(treeNode), 2);_this2.setState({ treeData: treeData });resolve();
	          }, 1000);
	        });
	      },
	      render: function render() {
	        var loop = function loop(data) {
	          return data.map(function (item) {
	            if (item.children) {
	              return _react2.default.createElement(
	                TreeNode,
	                { title: item.name, key: item.key },
	                loop(item.children)
	              );
	            }return _react2.default.createElement(TreeNode, { title: item.name, key: item.key, isLeaf: item.isLeaf, disabled: item.key === '0-0-0' });
	          });
	        };var treeNodes = loop(this.state.treeData);return _react2.default.createElement(
	          _tree2.default,
	          { onSelect: this.onSelect, loadData: this.onLoadData },
	          treeNodes
	        );
	      }
	    });return _react2.default.createElement(Demo, null);
	  }
	};

/***/ },

/***/ 1728:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _classCallCheck2 = __webpack_require__(4);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _possibleConstructorReturn2 = __webpack_require__(6);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(5);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _style3 = __webpack_require__(21);

	var _input = __webpack_require__(25);

	var _input2 = _interopRequireDefault(_input);

	var _style4 = __webpack_require__(211);

	var _tree = __webpack_require__(210);

	var _tree2 = _interopRequireDefault(_tree);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(2);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = {
	  "content": {
	    "zh-CN": [["p", "可搜索的树。"]],
	    "en-US": [["p", "Searchable Tree."]]
	  },
	  "meta": {
	    "order": 4,
	    "title": {
	      "zh-CN": "可搜索",
	      "en-US": "Searchable"
	    },
	    "filename": "components/tree/demo/search.md",
	    "id": "components-tree-demo-search"
	  },
	  "toc": ["ul", ["li", ["a", {
	    "href": "#zh-CN"
	  }, "zh-CN"]], ["li", ["a", {
	    "href": "#en-US"
	  }, "en-US"]]],
	  "highlightedCode": ["pre", {
	    "lang": "jsx",
	    "highlighted": "<span class=\"token keyword\" >import</span> <span class=\"token punctuation\" >{</span> Tree<span class=\"token punctuation\" >,</span> Input <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >from</span> <span class=\"token string\" >'antd'</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> TreeNode <span class=\"token operator\" >=</span> Tree<span class=\"token punctuation\" >.</span>TreeNode<span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> Search <span class=\"token operator\" >=</span> Input<span class=\"token punctuation\" >.</span>Search<span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> x <span class=\"token operator\" >=</span> <span class=\"token number\" >3</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> y <span class=\"token operator\" >=</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> z <span class=\"token operator\" >=</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> gData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> generateData <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>_level<span class=\"token punctuation\" >,</span> _preKey<span class=\"token punctuation\" >,</span> _tns<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >const</span> preKey <span class=\"token operator\" >=</span> _preKey <span class=\"token operator\" >||</span> <span class=\"token string\" >'0'</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >const</span> tns <span class=\"token operator\" >=</span> _tns <span class=\"token operator\" >||</span> gData<span class=\"token punctuation\" >;</span>\n\n  <span class=\"token keyword\" >const</span> children <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >for</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >let</span> i <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span> i <span class=\"token operator\" >&lt;</span> x<span class=\"token punctuation\" >;</span> i<span class=\"token operator\" >++</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> key <span class=\"token operator\" >=</span> <span class=\"token template-string\" ><span class=\"token string\" >`</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>preKey<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >-</span><span class=\"token interpolation\" ><span class=\"token interpolation-punctuation punctuation\" >${</span>i<span class=\"token interpolation-punctuation punctuation\" >}</span></span><span class=\"token string\" >`</span></span><span class=\"token punctuation\" >;</span>\n    tns<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> title<span class=\"token punctuation\" >:</span> key<span class=\"token punctuation\" >,</span> key <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>i <span class=\"token operator\" >&lt;</span> y<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      children<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>_level <span class=\"token operator\" >&lt;</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >return</span> tns<span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >const</span> level <span class=\"token operator\" >=</span> _level <span class=\"token operator\" >-</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >;</span>\n  children<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    tns<span class=\"token punctuation\" >[</span>index<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>children <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token function\" >generateData</span><span class=\"token punctuation\" >(</span>level<span class=\"token punctuation\" >,</span> key<span class=\"token punctuation\" >,</span> tns<span class=\"token punctuation\" >[</span>index<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n<span class=\"token function\" >generateData</span><span class=\"token punctuation\" >(</span>z<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> dataList <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> generateList <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>data<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >for</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >let</span> i <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span> i <span class=\"token operator\" >&lt;</span> data<span class=\"token punctuation\" >.</span>length<span class=\"token punctuation\" >;</span> i<span class=\"token operator\" >++</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> node <span class=\"token operator\" >=</span> data<span class=\"token punctuation\" >[</span>i<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> key <span class=\"token operator\" >=</span> node<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >;</span>\n    dataList<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> key<span class=\"token punctuation\" >,</span> title<span class=\"token punctuation\" >:</span> key <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>node<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token function\" >generateList</span><span class=\"token punctuation\" >(</span>node<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >,</span> node<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n<span class=\"token function\" >generateList</span><span class=\"token punctuation\" >(</span>gData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n\n<span class=\"token keyword\" >const</span> getParentKey <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >,</span> tree<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token keyword\" >let</span> parentKey<span class=\"token punctuation\" >;</span>\n  <span class=\"token keyword\" >for</span> <span class=\"token punctuation\" >(</span><span class=\"token keyword\" >let</span> i <span class=\"token operator\" >=</span> <span class=\"token number\" >0</span><span class=\"token punctuation\" >;</span> i <span class=\"token operator\" >&lt;</span> tree<span class=\"token punctuation\" >.</span>length<span class=\"token punctuation\" >;</span> i<span class=\"token operator\" >++</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> node <span class=\"token operator\" >=</span> tree<span class=\"token punctuation\" >[</span>i<span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>node<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>node<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >.</span><span class=\"token function\" >some</span><span class=\"token punctuation\" >(</span>item <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> item<span class=\"token punctuation\" >.</span>key <span class=\"token operator\" >===</span> key<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        parentKey <span class=\"token operator\" >=</span> node<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span> <span class=\"token keyword\" >else</span> <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span><span class=\"token function\" >getParentKey</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >,</span> node<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        parentKey <span class=\"token operator\" >=</span> <span class=\"token function\" >getParentKey</span><span class=\"token punctuation\" >(</span>key<span class=\"token punctuation\" >,</span> node<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token keyword\" >return</span> parentKey<span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n\n\n<span class=\"token keyword\" >class</span> <span class=\"token class-name\" >SearchTree</span> <span class=\"token keyword\" >extends</span> <span class=\"token class-name\" >React<span class=\"token punctuation\" >.</span>Component</span> <span class=\"token punctuation\" >{</span>\n  <span class=\"token function\" >constructor</span><span class=\"token punctuation\" >(</span>props<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >super</span><span class=\"token punctuation\" >(</span>props<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >{</span>\n      expandedKeys<span class=\"token punctuation\" >:</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >,</span>\n      searchValue<span class=\"token punctuation\" >:</span> <span class=\"token string\" >''</span><span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  onExpand <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>expandedKeys<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span> expandedKeys <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  onChange <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >(</span>e<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> value <span class=\"token operator\" >=</span> e<span class=\"token punctuation\" >.</span>target<span class=\"token punctuation\" >.</span>value<span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> expandedKeys <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    dataList<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >.</span><span class=\"token function\" >indexOf</span><span class=\"token punctuation\" >(</span>value<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >></span> <span class=\"token operator\" >-</span><span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        expandedKeys<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span><span class=\"token function\" >getParentKey</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >,</span> gData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> uniqueExpandedKeys <span class=\"token operator\" >=</span> <span class=\"token punctuation\" >[</span><span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >;</span>\n    expandedKeys<span class=\"token punctuation\" >.</span><span class=\"token function\" >forEach</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item <span class=\"token operator\" >&amp;&amp;</span> uniqueExpandedKeys<span class=\"token punctuation\" >.</span><span class=\"token function\" >indexOf</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >===</span> <span class=\"token operator\" >-</span><span class=\"token number\" >1</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        uniqueExpandedKeys<span class=\"token punctuation\" >.</span><span class=\"token function\" >push</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span><span class=\"token function\" >setState</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >{</span>\n      expandedKeys<span class=\"token punctuation\" >:</span> uniqueExpandedKeys<span class=\"token punctuation\" >,</span>\n      searchValue<span class=\"token punctuation\" >:</span> value<span class=\"token punctuation\" >,</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n  <span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n    <span class=\"token keyword\" >const</span> <span class=\"token punctuation\" >{</span> searchValue<span class=\"token punctuation\" >,</span> expandedKeys <span class=\"token punctuation\" >}</span> <span class=\"token operator\" >=</span> <span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>state<span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >const</span> loop <span class=\"token operator\" >=</span> data <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> data<span class=\"token punctuation\" >.</span><span class=\"token function\" >map</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >)</span> <span class=\"token operator\" >=</span><span class=\"token operator\" >></span> <span class=\"token punctuation\" >{</span>\n      <span class=\"token keyword\" >const</span> index <span class=\"token operator\" >=</span> item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >.</span><span class=\"token function\" >search</span><span class=\"token punctuation\" >(</span>searchValue<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token keyword\" >const</span> beforeStr <span class=\"token operator\" >=</span> item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >.</span><span class=\"token function\" >substr</span><span class=\"token punctuation\" >(</span><span class=\"token number\" >0</span><span class=\"token punctuation\" >,</span> index<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token keyword\" >const</span> afterStr <span class=\"token operator\" >=</span> item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >.</span><span class=\"token function\" >substr</span><span class=\"token punctuation\" >(</span>index <span class=\"token operator\" >+</span> searchValue<span class=\"token punctuation\" >.</span>length<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token keyword\" >const</span> title <span class=\"token operator\" >=</span> index <span class=\"token operator\" >></span> <span class=\"token operator\" >-</span><span class=\"token number\" >1</span> <span class=\"token operator\" >?</span> <span class=\"token punctuation\" >(</span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>span</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token punctuation\" >{</span>beforeStr<span class=\"token punctuation\" >}</span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>span</span> <span class=\"token attr-name\" >className</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>ant-tree-searchable-filter<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >{</span>searchValue<span class=\"token punctuation\" >}</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token punctuation\" >{</span>afterStr<span class=\"token punctuation\" >}</span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span>\n      <span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >:</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>span</span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>span</span><span class=\"token punctuation\" >></span></span><span class=\"token punctuation\" >;</span>\n      <span class=\"token keyword\" >if</span> <span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span> <span class=\"token punctuation\" >{</span>\n        <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>title<span class=\"token punctuation\" >}</span></span><span class=\"token punctuation\" >></span></span>\n            <span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>item<span class=\"token punctuation\" >.</span>children<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>TreeNode</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n      <span class=\"token punctuation\" >}</span>\n      <span class=\"token keyword\" >return</span> <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>TreeNode</span> <span class=\"token attr-name\" >key</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>item<span class=\"token punctuation\" >.</span>key<span class=\"token punctuation\" >}</span></span> <span class=\"token attr-name\" >title</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>title<span class=\"token punctuation\" >}</span></span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >;</span>\n    <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n    <span class=\"token keyword\" >return</span> <span class=\"token punctuation\" >(</span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>div</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Search</span>\n          <span class=\"token attr-name\" >style</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token punctuation\" >{</span> width<span class=\"token punctuation\" >:</span> <span class=\"token number\" >200</span> <span class=\"token punctuation\" >}</span><span class=\"token punctuation\" >}</span></span>\n          <span class=\"token attr-name\" >placeholder</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Search<span class=\"token punctuation\" >\"</span></span>\n          <span class=\"token attr-name\" >onChange</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onChange<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token punctuation\" >/></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>Tree</span>\n          <span class=\"token attr-name\" >onExpand</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span><span class=\"token keyword\" >this</span><span class=\"token punctuation\" >.</span>onExpand<span class=\"token punctuation\" >}</span></span>\n          <span class=\"token attr-name\" >expandedKeys</span><span class=\"token script language-javascript\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >{</span>expandedKeys<span class=\"token punctuation\" >}</span></span>\n        <span class=\"token punctuation\" >></span></span>\n          <span class=\"token punctuation\" >{</span><span class=\"token function\" >loop</span><span class=\"token punctuation\" >(</span>gData<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >}</span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>Tree</span><span class=\"token punctuation\" >></span></span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>div</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token punctuation\" >}</span>\n<span class=\"token punctuation\" >}</span>\n\nReactDOM<span class=\"token punctuation\" >.</span><span class=\"token function\" >render</span><span class=\"token punctuation\" >(</span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>SearchTree</span> <span class=\"token punctuation\" >/></span></span><span class=\"token punctuation\" >,</span> mountNode<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>"
	  }],
	  "preview": function jsonmlReactLoader() {
	    var TreeNode = _tree2.default.TreeNode;
	    var Search = _input2.default.Search;
	    var x = 3;var y = 2;
	    var z = 1;
	    var gData = [];var generateData = function generateData(_level, _preKey, _tns) {
	      var preKey = _preKey || '0';var tns = _tns || gData;var children = [];for (var i = 0; i < x; i++) {
	        var key = preKey + '-' + i;tns.push({ title: key, key: key
	        });if (i < y) {
	          children.push(key);
	        }
	      }if (_level < 0) {
	        return tns;
	      }
	      var level = _level - 1;children.forEach(function (key, index) {
	        tns[index].children = [];return generateData(level, key, tns[index].children);
	      });
	    };generateData(z);
	    var dataList = [];var generateList = function generateList(data) {
	      for (var i = 0; i < data.length; i++) {
	        var node = data[i];var key = node.key;dataList.push({ key: key, title: key });if (node.children) {
	          generateList(node.children, node.key);
	        }
	      }
	    };generateList(gData);var getParentKey = function getParentKey(key, tree) {
	      var parentKey = void 0;for (var i = 0; i < tree.length; i++) {
	        var node = tree[i];if (node.children) {
	          if (node.children.some(function (item) {
	            return item.key === key;
	          })) {
	            parentKey = node.key;
	          } else if (getParentKey(key, node.children)) {
	            parentKey = getParentKey(key, node.children);
	          }
	        }
	      }return parentKey;
	    };
	    var SearchTree = function (_React$Component) {
	      (0, _inherits3.default)(SearchTree, _React$Component);

	      function SearchTree(props) {
	        (0, _classCallCheck3.default)(this, SearchTree);

	        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

	        _this.onExpand = function (expandedKeys) {
	          _this.setState({ expandedKeys: expandedKeys });
	        };

	        _this.onChange = function (e) {
	          var value = e.target.value;var expandedKeys = [];dataList.forEach(function (item) {
	            if (item.key.indexOf(value) > -1) {
	              expandedKeys.push(getParentKey(item.key, gData));
	            }
	          });var uniqueExpandedKeys = [];expandedKeys.forEach(function (item) {
	            if (item && uniqueExpandedKeys.indexOf(item) === -1) {
	              uniqueExpandedKeys.push(item);
	            }
	          });_this.setState({ expandedKeys: uniqueExpandedKeys, searchValue: value });
	        };

	        _this.state = { expandedKeys: [], searchValue: '' };
	        return _this;
	      }

	      SearchTree.prototype.render = function render() {
	        var _state = this.state,
	            searchValue = _state.searchValue,
	            expandedKeys = _state.expandedKeys;
	        var loop = function loop(data) {
	          return data.map(function (item) {
	            var index = item.key.search(searchValue);var beforeStr = item.key.substr(0, index);var afterStr = item.key.substr(index + searchValue.length);var title = index > -1 ? _react2.default.createElement(
	              'span',
	              null,
	              beforeStr,
	              _react2.default.createElement(
	                'span',
	                { className: 'ant-tree-searchable-filter' },
	                searchValue
	              ),
	              afterStr
	            ) : _react2.default.createElement(
	              'span',
	              null,
	              item.key
	            );if (item.children) {
	              return _react2.default.createElement(
	                TreeNode,
	                { key: item.key, title: title },
	                loop(item.children)
	              );
	            }return _react2.default.createElement(TreeNode, { key: item.key, title: title });
	          });
	        };return _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(Search, { style: { width: 200 }, placeholder: 'Search', onChange: this.onChange }),
	          _react2.default.createElement(
	            _tree2.default,
	            { onExpand: this.onExpand, expandedKeys: expandedKeys },
	            loop(gData)
	          )
	        );
	      };

	      return SearchTree;
	    }(_react2.default.Component);

	    return _react2.default.createElement(SearchTree, null);
	  },
	  "style": ".ant-tree-searchable-filter {\n  color: #f50;\n  transition: all .3s ease;\n}",
	  "highlightedStyle": "<span class=\"token selector\" ><span class=\"token class\" >.ant-tree-searchable-filter</span> </span><span class=\"token punctuation\" >{</span>\n  <span class=\"token property\" >color</span><span class=\"token punctuation\" >:</span> <span class=\"token hexcode\" >#f50</span><span class=\"token punctuation\" >;</span>\n  <span class=\"token property\" >transition</span><span class=\"token punctuation\" >:</span> all <span class=\"token number\" >.3</span>s ease<span class=\"token punctuation\" >;</span>\n<span class=\"token punctuation\" >}</span>"
	};

/***/ }

});