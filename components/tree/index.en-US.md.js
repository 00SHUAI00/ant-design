webpackJsonp([114,211],{

/***/ 968:
/***/ function(module, exports) {

	module.exports = {
	  "content": [
	    "section",
	    [
	      "h2",
	      "When To Use"
	    ],
	    [
	      "p",
	      "Directory, organization, biological classification, country, and etc. Almost things of the world are tree structure. The ",
	      [
	        "code",
	        "Tree"
	      ],
	      " component is a way of representing the hierarchical relationship of these things，and you also can expand, collapse, select the treeNodes of it."
	    ]
	  ],
	  "meta": {
	    "category": "Components",
	    "type": "Data Display",
	    "title": "Tree",
	    "filename": "components/tree/index.en-US.md"
	  },
	  "toc": [
	    "ul",
	    [
	      "li",
	      [
	        "a",
	        {
	          "className": "bisheng-toc-h2",
	          "href": "#When-To-Use"
	        },
	        "When To Use"
	      ]
	    ],
	    [
	      "li",
	      [
	        "a",
	        {
	          "className": "bisheng-toc-h2",
	          "href": "#API"
	        },
	        "API"
	      ]
	    ],
	    [
	      "li",
	      [
	        "a",
	        {
	          "className": "bisheng-toc-h2",
	          "href": "#Note"
	        },
	        "Note"
	      ]
	    ]
	  ],
	  "api": [
	    "section",
	    [
	      "h2",
	      "API"
	    ],
	    [
	      "h3",
	      "Tree props"
	    ],
	    [
	      "table",
	      [
	        "thead",
	        [
	          "tr",
	          [
	            "th",
	            "Property"
	          ],
	          [
	            "th",
	            "Description"
	          ],
	          [
	            "th",
	            "Type"
	          ],
	          [
	            "th",
	            "Default"
	          ]
	        ]
	      ],
	      [
	        "tbody",
	        [
	          "tr",
	          [
	            "td",
	            "multiple"
	          ],
	          [
	            "td",
	            "Whether allow to select multiple treeNodes"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "checkable"
	          ],
	          [
	            "td",
	            "Whether support add Checkbox before treeNode"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "defaultExpandAll"
	          ],
	          [
	            "td",
	            "Whether default to expand all treeNodes"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "defaultExpandedKeys"
	          ],
	          [
	            "td",
	            "Specify keys of default expanded treeNodes"
	          ],
	          [
	            "td",
	            "string[]"
	          ],
	          [
	            "td",
	            "[]"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "expandedKeys"
	          ],
	          [
	            "td",
	            "(controlled) Specifies keys of expanded treeNodes"
	          ],
	          [
	            "td",
	            "string[]"
	          ],
	          [
	            "td",
	            "[]"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "autoExpandParent"
	          ],
	          [
	            "td",
	            "Whether to automatically expand a parent treeNode"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "true"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "defaultCheckedKeys"
	          ],
	          [
	            "td",
	            "Specifies keys of default checked treeNodes"
	          ],
	          [
	            "td",
	            "string[]"
	          ],
	          [
	            "td",
	            "[]"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "checkedKeys"
	          ],
	          [
	            "td",
	            "(controlled) Specifies keys of checked treeNodes（PS： When specifies a key of treeNode which is a parent treeNode, all children treeNodes of its will be checked; And vice versa, when specifies a key of treeNode which is a child treeNode, its parent treeNode will also be checked. When ",
	            [
	              "code",
	              "checkable"
	            ],
	            " and ",
	            [
	              "code",
	              "checkStrictly"
	            ],
	            " is true, it'a object has ",
	            [
	              "code",
	              "checked"
	            ],
	            " and ",
	            [
	              "code",
	              "halfChecked"
	            ],
	            " property, and no matter child treeNode or parent treeNode is checked, they won't impact on eachother."
	          ],
	          [
	            "td",
	            "string[]/{checked:string[],halfChecked:string[]}"
	          ],
	          [
	            "td",
	            "[]"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "checkStrictly"
	          ],
	          [
	            "td",
	            "Check treeNode precisely, parent treeNode and children treeNodes are not associated"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "defaultSelectedKeys"
	          ],
	          [
	            "td",
	            "Specifies keys of default selected treeNodes"
	          ],
	          [
	            "td",
	            "string[]"
	          ],
	          [
	            "td",
	            "[]"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "selectedKeys"
	          ],
	          [
	            "td",
	            "(controlled) Specifies keys of selected treeNode"
	          ],
	          [
	            "td",
	            "string[]"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onExpand"
	          ],
	          [
	            "td",
	            "Defines a function will be called when expand or collapse a treeNode"
	          ],
	          [
	            "td",
	            "function(expandedKeys, {expanded: bool, node})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onCheck"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onCheck event occurs"
	          ],
	          [
	            "td",
	            "function(checkedKeys, e:{checked: bool, checkedNodes, node, event})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onSelect"
	          ],
	          [
	            "td",
	            "The callback will be invoked when the user clicks a treeNode"
	          ],
	          [
	            "td",
	            "function(selectedKeys, e:{selected: bool, selectedNodes, node, event})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "filterTreeNode"
	          ],
	          [
	            "td",
	            "Defines a function to filter treeNodes（highlight），when return true, corresponding treeNode will be highlight"
	          ],
	          [
	            "td",
	            "function(node)"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "loadData"
	          ],
	          [
	            "td",
	            "load data asynchronously"
	          ],
	          [
	            "td",
	            "function(node)"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onRightClick"
	          ],
	          [
	            "td",
	            "The call back will be invoked when the user right clicks a treeNode"
	          ],
	          [
	            "td",
	            "function({event,node})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "draggable"
	          ],
	          [
	            "td",
	            "Specifies whether this Tree is draggable（IE>8）"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onDragStart"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onDragStart event occurs"
	          ],
	          [
	            "td",
	            "function({event,node})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onDragEnter"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onDragEnter event occurs"
	          ],
	          [
	            "td",
	            "function({event,node,expandedKeys})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onDragOver"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onDragOver event occurs"
	          ],
	          [
	            "td",
	            "function({event,node})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onDragLeave"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onDragLeave event occurs"
	          ],
	          [
	            "td",
	            "function({event,node})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onDragEnd"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onDragEnd event occurs"
	          ],
	          [
	            "td",
	            "function({event,node})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "onDrop"
	          ],
	          [
	            "td",
	            "Defines a function will be called when the onDrop event occurs"
	          ],
	          [
	            "td",
	            "function({event, node, dragNode, dragNodesKeys})"
	          ],
	          [
	            "td",
	            "-"
	          ]
	        ]
	      ]
	    ],
	    [
	      "h3",
	      "TreeNode props"
	    ],
	    [
	      "table",
	      [
	        "thead",
	        [
	          "tr",
	          [
	            "th",
	            "Property"
	          ],
	          [
	            "th",
	            "Description"
	          ],
	          [
	            "th",
	            "Type"
	          ],
	          [
	            "th",
	            "Default"
	          ]
	        ]
	      ],
	      [
	        "tbody",
	        [
	          "tr",
	          [
	            "td",
	            "disabled"
	          ],
	          [
	            "td",
	            "whether disabled the treeNode"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "disableCheckbox"
	          ],
	          [
	            "td",
	            "whether disable the checkbox of treeNode"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "title"
	          ],
	          [
	            "td",
	            "title"
	          ],
	          [
	            "td",
	            "string",
	            "|",
	            "ReactNode"
	          ],
	          [
	            "td",
	            "'---'"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "key"
	          ],
	          [
	            "td",
	            "it's used with (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys. P.S.: it must be unique in all of treeNodes of the tree!"
	          ],
	          [
	            "td",
	            "string"
	          ],
	          [
	            "td",
	            "internal calculated position of treeNode"
	          ]
	        ],
	        [
	          "tr",
	          [
	            "td",
	            "isLeaf"
	          ],
	          [
	            "td",
	            "whether it's leaf node"
	          ],
	          [
	            "td",
	            "boolean"
	          ],
	          [
	            "td",
	            "false"
	          ]
	        ]
	      ]
	    ],
	    [
	      "h2",
	      "Note"
	    ],
	    [
	      "p",
	      "The number of treeNodes can be very large, but when enable ",
	      [
	        "code",
	        "checkable"
	      ],
	      ",\nit will spend more computing time, so we cache some calculations (e.g. ",
	      [
	        "code",
	        "this.treeNodesStates"
	      ],
	      "),\nto avoid double computing. But, this bring some restrictions,\n",
	      [
	        "strong",
	        "when you load treeNodes asynchronously, you should render tree like this"
	      ],
	      "。"
	    ],
	    [
	      "pre",
	      {
	        "lang": "jsx",
	        "highlighted": "<span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>treeData<span class=\"token punctuation\">.</span>length\n  <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Tree</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>treeData<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TreeNode</span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Tree</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">:</span> <span class=\"token string\">'loading tree'</span><span class=\"token punctuation\">}</span>"
	      },
	      [
	        "code",
	        "{this.state.treeData.length\n  ? <Tree>{this.state.treeData.map(data => <TreeNode />)}</Tree>\n  : 'loading tree'}"
	      ]
	    ]
	  ]
	};

/***/ }

});